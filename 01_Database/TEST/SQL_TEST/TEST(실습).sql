----------------- BASIC SELECT
--1.
SELECT DEPARTMENT_NAME AS "학과 명", CATEGORY AS "계열" FROM TB_DEPARTMENT;

--2.
SELECT DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || '명 입니다.' FROM TB_DEPARTMENT;

--3.
SELECT STUDENT_NAME 
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE ABSENCE_YN = 'Y' 
AND DEPARTMENT_NAME = '국어국문학과' 
AND SUBSTR(STUDENT_SSN, 8, 1) IN ('2', '4');

--4.
SELECT STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513110', 'A513119');

--5.
SELECT DEPARTMENT_NAME AS "학과 명", CATEGORY AS "계열" FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30 ;

--6.
SELECT PROFESSOR_NAME FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7.
SELECT STUDENT_NAME FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

--8.
SELECT PREATTENDING_CLASS_NO, CLASS_NAME FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9.
SELECT DISTINCT CATEGORY AS "계열" FROM TB_DEPARTMENT;

--10.
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_SSN, 2, 1) = '2' AND ABSENCE_YN = 'N'; 

------------------------- ADDITIONAL SELECT - 함수---
--1.
SELECT STUDENT_NO, STUDENT_NAME, ENTRANCE_DATE
FROM TB_STUDENT 
WHERE DEPARTMENT_NO = '002'
ORDER BY DEPARTMENT_NO ASC;

--2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME NOT LIKE '___';

--3.
SELECT PROFESSOR_NAME,
(EXTRACT(YEAR FROM SYSDATE) - (SUBSTR(PROFESSOR_SSN, 1, 2) + 1901)) AS "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) IN ('1','3')
ORDER BY 나이;

--4.
SELECT SUBSTR(PROFESSOR_NAME, 2, 2) AS "이름"
FROM TB_PROFESSOR;

--5.
SELECT STUDENT_NO, STUDENT_NAME, 
(EXTRACT(YEAR FROM ENTRANCE_DATE) - (SUBSTR(STUDENT_SSN, 1, 2) + 1900)) AS "입학나이"
FROM TB_STUDENT
WHERE (EXTRACT(YEAR FROM ENTRANCE_DATE) - (SUBSTR(STUDENT_SSN, 1, 2) + 1900)) > 19;

--6.
SELECT TO_CHAR(TO_DATE(20201225), 'DAY') FROM DUAL;

--7.
SELECT TO_CHAR(TO_DATE('99/10/11'), 'YYYY"년" MM"월" DD"일"') FROM DUAL;
SELECT TO_CHAR(TO_DATE('49/10/11'), 'YYYY"년" MM"월" DD"일"') FROM DUAL;
SELECT TO_CHAR(TO_DATE('99/10/11'), 'RRRR"년" MM"월" DD"일"') FROM DUAL;
SELECT TO_CHAR(TO_DATE('49/10/11'), 'RRRR"년" MM"월" DD"일"') FROM DUAL;

--8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO, 1, 1) != 'A';

--9.
SELECT ROUND(AVG(POINT),1) AS "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

--10.
SELECT DEPARTMENT_NO AS "학과번호", CAPACITY AS "학생 수(명)"
FROM TB_DEPARTMENT;

--11.
SELECT COUNT(*) 
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--12.
SELECT SUBSTR(TERM_NO, 1, 4) AS "년도", 
ROUND(AVG(POINT),1) AS "년도별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1, 4);


--13.
SELECT DEPARTMENT_NO, COUNT(*)
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO;

--14.
SELECT STUDENT_NAME, COUNT(*)
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) >= 2;

--15.
SELECT SUBSTR(TERM_NO, 1, 4) AS "년도", SUBSTR(TERM_NO, 5, 2) AS "학기",
POINT AS "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113';

--------------------------------------ADDITIONAL SELECT - OPTION--------------------------
--1.
SELECT STUDENT_NAME AS "학생이름", STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME ASC;

--2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

--3.
SELECT STUDENT_NAME AS "학생이름", SUBSTR(STUDENT_SSN, 1, 6) AS "학번", STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '강원도%' OR
      STUDENT_ADDRESS LIKE '경기도%' AND
      SUBSTR(STUDENT_SSN, 1, 2) <= 99
ORDER BY STUDENT_NAME ASC;

--4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR 
ORDER BY PROFESSOR_SSN ASC;

--5.
SELECT STUDENT_NO, POINT
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO ASC;

--6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME ASC;

--7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

--8.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_PROFESSOR USING(DEPARTMENT_NO);

--9.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_PROFESSOR USING(DEPARTMENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY = '인문사회' ;

--10.
SELECT STUDENT_NO, STUDENT_NAME, ROUND(AVG(POINT), 1), DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME;

--11.
SELECT DISTINCT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING(DEPARTMENT_NO)
JOIN TB_CLASS_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO )
JOIN TB_PROFESSOR USING(PROFESSOR_NO )
WHERE STUDENT_NO = 'A313047';

--12.
SELECT DISTINCT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_CLASS USING(DEPARTMENT_NO)
WHERE SUBSTR(TERM_NO, 3, 2) = '07' 
AND CLASS_NAME = '인간관계론';

--13.
SELECT CLASS_NAME, DEPARTMENT_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
WHERE CATEGORY = '예체능' AND PROFESSOR_NO IS NULL ;

--14.
SELECT STUDENT_NAME AS "학생이름", PROFESSOR_NAME AS "지도교수"
FROM TB_STUDENT
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE PROFESSOR_NO IS NULL;

--15.
SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "이름", DEPARTMENT_NAME AS "학과 이름",AVG(POINT) AS "평점"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4;

--16.
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
GROUP BY CLASS_NO, CLASS_NAME;

--17.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                       FROM TB_STUDENT
                       WHERE STUDENT_NAME = '최경희');

--18.

SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME
        FROM TB_GRADE
        JOIN TB_STUDENT USING(STUDENT_NO)
        JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
        WHERE DEPARTMENT_NAME = '국어국문학과'
        GROUP BY STUDENT_NO, STUDENT_NAME
        ORDER BY AVG(POINT) DESC)
WHERE ROWNUM <= 1;

--19.
SELECT CATEGORY
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '환경조경학과';

SELECT DEPARTMENT_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY
                    FROM TB_DEPARTMENT
                    WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME;

------------------------------------------- DDL -----------------------------------------
--1.
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1)DEFAULT 'Y'
);
SELECT * FROM TB_CATEGORY;

--2.
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);
SELECT * FROM TB_CLASS_TYPE;

--3.
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY(NAME);

--4.
ALTER TABLE TB_CATEGORY MODIFY NAME NOT NULL;

--5.
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10)
                        MODIFY NAME VARCHAR2(20);

--6.
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN TB_CLASS_TYPE_NO TO CLASS_TYPE_NAME;

--7.
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT SYS_C008944 TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT SYS_C008943 TO PK_CLASS_TYPE_NAME;

--8.
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;
